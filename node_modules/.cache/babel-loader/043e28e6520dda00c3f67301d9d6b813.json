{"ast":null,"code":"import*as yup from'yup';import{useValidationsBR}from'validations-br';var sellSchema=yup.object().shape({firstName:yup.string().required('Seu nome por favor...'),lastName:yup.string().required('O sobrenome também!'),email:yup.string().email().required('Digite seu email'),ccNumber:yup.string().test('CC-Numero,','Número de cartão inválido',function(value){if(/[^0-9-\\s]+/.test(value))return false;var nCheck=0,bEven=false;value=value.replace(/\\D/g,\"\");for(var n=value.length-1;n>=0;n--){var cDigit=value.charAt(n),nDigit=parseInt(cDigit,10);if(bEven&&(nDigit*=2)>9)nDigit-=9;nCheck+=nDigit;bEven=!bEven;}return nCheck%10===0;}).required('Coloque o número do cartão'),ccName:yup.string().required('Digite o nome que está no cartão'),cvv:yup.string().required('Lembre-se do cvv!'),validade:yup.string().required('Digite a validade'),cpfCnpj:yup.string().test('cpf/cnpj','Formato inválido!',function(value){return!!value?useValidationsBR('cnpj',value)||useValidationsBR('cpf',value):true;}).required('Digite o seu CPF/CNJP'),cep:yup.string().required('Digite o seu CEP'),endereco:yup.string().required('Coloque o seu endereço'),numero:yup.string().required('O número'),complemento:yup.string().required('Use um complemento!'),cidade:yup.string().required('Qual sua cidade?'),bairro:yup.string().required('...e o bairro?'),estado:yup.string().required('Lembre do Estado!')});export default sellSchema;","map":{"version":3,"sources":["/home/igor/Desktop/sw-cehicle/src/helpers/Schema.ts"],"names":["yup","useValidationsBR","sellSchema","object","shape","firstName","string","required","lastName","email","ccNumber","test","value","nCheck","bEven","replace","n","length","cDigit","charAt","nDigit","parseInt","ccName","cvv","validade","cpfCnpj","cep","endereco","numero","complemento","cidade","bairro","estado"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,GAAZ,KAAqB,KAArB,CACA,OAASC,gBAAT,KAAiC,gBAAjC,CAEA,GAAMC,CAAAA,UAAU,CAAGF,GAAG,CAACG,MAAJ,GAAaC,KAAb,CAAmB,CAClCC,SAAS,CAAEL,GAAG,CAACM,MAAJ,GAAaC,QAAb,CAAsB,uBAAtB,CADuB,CAElCC,QAAQ,CAAER,GAAG,CAACM,MAAJ,GAAaC,QAAb,CAAsB,qBAAtB,CAFwB,CAGlCE,KAAK,CAAET,GAAG,CAACM,MAAJ,GAAaG,KAAb,GAAqBF,QAArB,CAA8B,kBAA9B,CAH2B,CAIlCG,QAAQ,CAAEV,GAAG,CAACM,MAAJ,GACIK,IADJ,CACS,YADT,CAES,2BAFT,CAGS,SAACC,KAAD,CAAgB,CACX,GAAI,aAAaD,IAAb,CAAkBC,KAAlB,CAAJ,CAA8B,MAAO,MAAP,CAC9B,GAAIC,CAAAA,MAAM,CAAG,CAAb,CAAgBC,KAAK,CAAG,KAAxB,CACAF,KAAK,CAAGA,KAAK,CAACG,OAAN,CAAc,KAAd,CAAqB,EAArB,CAAR,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAGJ,KAAK,CAACK,MAAN,CAAe,CAA5B,CAA+BD,CAAC,EAAI,CAApC,CAAuCA,CAAC,EAAxC,CAA4C,CACxC,GAAIE,CAAAA,MAAM,CAAGN,KAAK,CAACO,MAAN,CAAaH,CAAb,CAAb,CACQI,MAAM,CAAGC,QAAQ,CAACH,MAAD,CAAS,EAAT,CADzB,CAGA,GAAIJ,KAAK,EAAI,CAACM,MAAM,EAAI,CAAX,EAAgB,CAA7B,CAAgCA,MAAM,EAAI,CAAV,CAChCP,MAAM,EAAIO,MAAV,CACAN,KAAK,CAAG,CAACA,KAAT,CACH,CACD,MAAQD,CAAAA,MAAM,CAAG,EAAV,GAAkB,CAAzB,CACH,CAhBX,EAiBIN,QAjBJ,CAiBa,4BAjBb,CAJwB,CAsBlCe,MAAM,CAAEtB,GAAG,CAACM,MAAJ,GAAaC,QAAb,CAAsB,kCAAtB,CAtB0B,CAuBlCgB,GAAG,CAAEvB,GAAG,CAACM,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB,CAvB6B,CAwBlCiB,QAAQ,CAAExB,GAAG,CAACM,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB,CAxBwB,CAyBlCkB,OAAO,CAAEzB,GAAG,CAACM,MAAJ,GACIK,IADJ,CACS,UADT,CAEO,mBAFP,CAGO,SAACC,KAAD,CAAgB,CACZ,MAAO,CAAC,CAACA,KAAF,CAAWX,gBAAgB,CAAC,MAAD,CAASW,KAAT,CAAhB,EACFX,gBAAgB,CAAC,KAAD,CAAQW,KAAR,CADzB,CAES,IAFhB,CAGH,CAPR,EAQIL,QARJ,CAQa,uBARb,CAzByB,CAkClCmB,GAAG,CAAE1B,GAAG,CAACM,MAAJ,GACIC,QADJ,CACa,kBADb,CAlC6B,CAoClCoB,QAAQ,CAAE3B,GAAG,CAACM,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CApCwB,CAqClCqB,MAAM,CAAE5B,GAAG,CAACM,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,CArC0B,CAsClCsB,WAAW,CAAE7B,GAAG,CAACM,MAAJ,GAAaC,QAAb,CAAsB,qBAAtB,CAtCqB,CAuClCuB,MAAM,CAAE9B,GAAG,CAACM,MAAJ,GAAaC,QAAb,CAAsB,kBAAtB,CAvC0B,CAwClCwB,MAAM,CAAE/B,GAAG,CAACM,MAAJ,GAAaC,QAAb,CAAsB,gBAAtB,CAxC0B,CAyClCyB,MAAM,CAAEhC,GAAG,CAACM,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB,CAzC0B,CAAnB,CAAnB,CA4CA,cAAeL,CAAAA,UAAf","sourcesContent":["import * as yup from 'yup'\nimport { useValidationsBR } from 'validations-br';\n\nconst sellSchema = yup.object().shape({\n    firstName: yup.string().required('Seu nome por favor...') ,\n    lastName: yup.string().required('O sobrenome também!'),\n    email: yup.string().email().required('Digite seu email'),\n    ccNumber: yup.string()\n                 .test('CC-Numero,',\n                       'Número de cartão inválido',\n                       (value: any) => {\n                            if (/[^0-9-\\s]+/.test(value)) return false;\n                            let nCheck = 0, bEven = false;\n                            value = value.replace(/\\D/g, \"\");\n                            for (var n = value.length - 1; n >= 0; n--) {\n                                var cDigit = value.charAt(n),\n                                        nDigit = parseInt(cDigit, 10);\n                        \n                                if (bEven && (nDigit *= 2) > 9) nDigit -= 9;\n                                nCheck += nDigit;\n                                bEven = !bEven;\n                            }\n                            return (nCheck % 10) === 0;\n                        })\n                 .required('Coloque o número do cartão'),\n    ccName: yup.string().required('Digite o nome que está no cartão'),\n    cvv: yup.string().required('Lembre-se do cvv!'),\n    validade: yup.string().required('Digite a validade'),\n    cpfCnpj: yup.string()\n                .test('cpf/cnpj',\n                    'Formato inválido!',\n                    (value: any) => {\n                        return !!value ? (useValidationsBR('cnpj', value) || \n                                        useValidationsBR('cpf', value)) :\n                                        true\n                    })\n                .required('Digite o seu CPF/CNJP'),\n    cep: yup.string()\n            .required('Digite o seu CEP'),\n    endereco: yup.string().required('Coloque o seu endereço'),\n    numero: yup.string().required('O número'),\n    complemento: yup.string().required('Use um complemento!'),\n    cidade: yup.string().required('Qual sua cidade?'),\n    bairro: yup.string().required('...e o bairro?'),\n    estado: yup.string().required('Lembre do Estado!'), \n})\n\nexport default sellSchema;\n"]},"metadata":{},"sourceType":"module"}